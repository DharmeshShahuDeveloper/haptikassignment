{"version":3,"sources":["Modal.js","App.js","helperfunctions.js","reportWebVitals.js","index.js"],"names":["Modal","props","useEffect","close","e","keyCode","setModalShow","window","addEventListener","removeEventListener","show","createPortal","className","onClick","stopPropagation","name","delete","friendList","document","getElementById","App","useState","favourite","friendListOg","setFriendListOg","setFriendList","currentPage","setCurrentPage","sort","setSort","addSuccess","setAddSuccess","friendError","setFriendError","modalShow","deleteHolder","setDeleteHolder","setTimeout","addItem","list","addFunction","favItem","item","map","listItem","favFunction","length","id","placeholder","onChange","onKeyPress","key","target","value","toUpperCase","includes","inputVal","filter","indexOf","a","b","sorted","slice","class","Array","from","Math","ceil","keys","index","deleteFunction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.48ff532c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { createPortal } from \"react-dom\";\n\nexport default function Modal(props) {\n\n    useEffect(() => {\n        const close = (e) => {\n          if(e.keyCode === 27){\n            props.setModalShow(false)\n          }\n        }\n        window.addEventListener('keydown', close)\n      return () => window.removeEventListener('keydown', close)\n    },[])\n\n    if(props.show) {\n    return createPortal(\n        <div className=\"modalwrapper\" onClick={()=>props.setModalShow(false)}>\n        <div className=\"modalmain\" onClick={(e)=> {\n            e.stopPropagation();\n        }}>\n            <p>Are you sure you want to remove \"<strong>{props.name}</strong>\" from your friend list?</p>\n            <div className=\"modalbtns\">\n            <button className=\"yes\" onClick={()=> {\n                props.delete(props.name, props.friendList);\n                props.setModalShow(false);\n            }}>Yes</button>\n            <button className=\"no\" onClick={()=> {\n                props.setModalShow(false);\n            }}>No</button>\n            </div>\n            </div>\n        </div>,\n        document.getElementById('modal-root')\n      );\n    }\n    return false;\n}","import './App.scss';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { useEffect, useState } from 'react';\nimport Modal from './Modal';\nimport { addFunction, deleteFunction, favFunction } from './helperfunctions';\n\nexport default function App() {\n\n  //friend list stored possible to act as a server fetched data\n  const [friendListOg, setFriendListOg] = useState([\n    {\n      name: 'Superman',\n      favourite: false\n    },\n    {\n      name: 'Ironman',\n      favourite: false\n    },\n    {\n      name: 'Spiderman',\n      favourite: true\n    },\n    {\n      name: 'Venom',\n      favourite: false\n    },\n    {\n      name: 'Thor',\n      favourite: true\n    },\n    {\n      name: 'Deadpool',\n      favourite: true\n    },\n    {\n      name: 'Doctor Strange',\n      favourite: false\n    },\n    {\n      name: 'Odin',\n      favourite: true\n    },\n    {\n      name: 'Black Widow',\n      favourite: true\n    },\n    {\n      name: 'Captain America',\n      favourite: true\n    }\n  ]);\n\n  //friend list\n  const [friendList, setFriendList] = useState([]);\n\n  //current page of pagination\n  const [currentPage, setCurrentPage] = useState(0);\n\n  //sort direction\n  const [sort, setSort] = useState(false);\n\n  //add friend message show condition\n  const [addSuccess, setAddSuccess] = useState(false);\n\n  //state to store validation error while adding friend\n  const [friendError, setFriendError] = useState('');\n\n  //delete modal display state\n  const [modalShow, setModalShow] = useState(false);\n\n  //temporary holder to store the name of friend to be deleted\n  const [deleteHolder, setDeleteHolder] = useState('');\n\n  //any change in orignal friendlist will be reflected on the current displayed friendlist\n  useEffect(()=>{\n    setFriendList(friendListOg);\n  },[friendListOg]);\n\n  //success message hide after 1 sec of being displayed\n  useEffect(()=>{\n    if(addSuccess) {\n      setTimeout(()=> {\n        setAddSuccess(false)\n      },1000);\n    }\n  },[addSuccess]);\n\n  //add friend function\n  const addItem = (name) => {\n    setFriendListOg(addFunction(name, friendListOg));\n  }\n\n  //delete friend function\n  const deleteItem = (name) => {\n    setFriendListOg(deleteFunction(name, friendListOg));\n  }\n\n  //favourite a  friend function\n  const favItem = (item) => {\n    setFriendListOg(favFunction(item, friendListOg));\n  }\n\n\n  return (\n    <div className=\"friend-list-main\">\n          <div className=\"friend-list-box\">\n            <h3>You have {friendListOg.length} friends!</h3>\n            <div className=\"friend-list-box-inner\">\n              {/* add a friend input */}\n            <input id=\"addfriend\" placeholder=\"Enter your friend's name\"\n            onChange={(e)=> {\n              setAddSuccess(false);\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                if(e.target.value) {\n                if(friendListOg.map(item => item.name.toUpperCase()).includes(e.target.value.toUpperCase())) {\n                  setFriendError('Friend is already present in the list');\n                }\n                else {\n                addItem(e.target.value);\n                setTimeout(()=>{\n                  e.target.value = '';\n                }, 10)\n                setFriendError('');\n                setAddSuccess(true);\n                }\n              }\n              else {\n                setFriendError('Please enter name');\n              }\n              }\n            }}\n            />\n            {friendError && <p className=\"error\">{friendError}</p>}\n            {addSuccess && <p className=\"successalert\">Added Successfully!</p>}\n\n            {/* search a friend input */}\n            <input id=\"searchbox\" placeholder=\"Search Friends...\" onChange={(e)=>{\n              let inputVal = e.target.value;\n              setFriendList(friendListOg.filter(item  => item.name.toUpperCase().indexOf(inputVal.toUpperCase()) > -1));\n              setCurrentPage(0);\n              setSort(false);\n            }}/>\n            <div className=\"sortbtn\">\n            <button className={sort ? \"active\" : null} onClick={()=> {\n              if(sort) {\n              setFriendList(list=> list.sort((a,b)=> a.favourite - b.favourite));\n              }\n              else {\n                setFriendList(list=> list.sort((a,b)=> b.favourite - a.favourite));\n              }\n              setCurrentPage(0);\n              setSort(sorted => !sorted);\n            }}>Sort by Favourite</button>\n            </div>\n            <ul className=\"friend-list-ul\">\n              {\n                friendList.slice(currentPage*3, (currentPage+1)*3).map((item)=>{\n                  // displayed friendlist\n                  return (\n                    <li>\n                      <span>\n                        <span>{item.name}</span>\n                        <span>is your friend</span>\n                        </span>\n                    <span>\n                      {/* favourite a friend icon */}\n                      <i className={\"fa fa-star\" + (!item.favourite ? \"-o\" : '')} aria-hidden=\"true\" \n                      onClick={()=> favItem(item)}/>\n                      </span>\n                    <span>\n                      {/* delete a friend icon */}\n                    <i class=\"fa fa-trash-o\" aria-hidden=\"true\" \n                    onClick={()=>{\n                      setDeleteHolder(item.name);\n                      setModalShow(true);\n                    }}/>\n                    </span>\n                    </li>\n                  )\n                })\n              }\n              </ul>\n            </div>\n            {\n              Array.from(Array(Math.ceil(friendList.length/3)).keys()).length > 1\n              ? (\n                // Pagination Block (using array methods to generate number of pages)\n                <div className=\"pagination\">\n                <ul>\n                {\n                Array.from(Array(Math.ceil(friendList.length/3)).keys()).map((item, index) => {\n                    return (\n                      <li className={currentPage === item ? \"active\" : null} onClick={()=>{\n                        setCurrentPage(item);\n                      }}>{item+1}</li>\n                    )\n                })\n                }\n                </ul>\n              </div>\n              )\n              : null\n            }\n            </div>\n            <Modal show={modalShow} setModalShow={setModalShow} delete={deleteItem} friendList={friendListOg} name={deleteHolder}/>\n    </div>\n  );\n}\n","export const addFunction = (name, list) => {\n    let tempList = [...list, {name: name, favourite: false}];\n    return tempList;\n}\n\nexport const deleteFunction = (name, list) => {\n    let tempList = [...list].filter(listItem=> listItem.name !== name);\n    return tempList;\n}\n\nexport const favFunction = (item, list) => {\n    let tempList = list.map(listItem => listItem.name === item.name ? {...listItem, favourite: !item.favourite} : listItem);\n    return tempList;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}