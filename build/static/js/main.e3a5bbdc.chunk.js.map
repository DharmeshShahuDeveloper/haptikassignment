{"version":3,"sources":["Modal.js","Pagination.js","List.js","App.js","helperfunctions.js","reportWebVitals.js","index.js"],"names":["Modal","props","useEffect","close","e","keyCode","setModalShow","window","addEventListener","removeEventListener","show","createPortal","className","onClick","stopPropagation","name","delete","friendList","document","getElementById","Pagination","useState","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","pages","i","Math","ceil","data","length","push","renderPageNumbers","map","number","id","setCurrentPage","currentPage","pageDecrementBtn","pageIncrementBtn","class","List","favItem","setDeleteHolder","slice","item","favourite","App","friends","friendListOg","setFriendListOg","setFriendList","sort","setSort","addSuccess","setAddSuccess","friendError","setFriendError","modalShow","deleteHolder","setTimeout","addItem","list","addFunction","placeholder","onChange","onKeyPress","key","target","value","toUpperCase","includes","inputVal","filter","indexOf","a","b","sorted","listItem","favFunction","deleteFunction","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e3a5bbdc.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { createPortal } from \"react-dom\";\r\n\r\nexport default function Modal(props) {\r\n\r\n    useEffect(() => {\r\n        const close = (e) => {\r\n          if(e.keyCode === 27){\r\n            props.setModalShow(false)\r\n          }\r\n        }\r\n        window.addEventListener('keydown', close)\r\n      return () => window.removeEventListener('keydown', close)\r\n    },[props])\r\n\r\n    if(props.show) {\r\n    return createPortal(\r\n        <div className=\"modalwrapper\" onClick={()=>props.setModalShow(false)}>\r\n        <div className=\"modalmain\" onClick={(e)=> {\r\n            e.stopPropagation();\r\n        }}>\r\n            <p>Are you sure you want to remove \"<strong>{props.name}</strong>\" from your friend list?</p>\r\n            <div className=\"modalbtns\">\r\n            <button className=\"yes\" onClick={()=> {\r\n                props.delete(props.name, props.friendList);\r\n                props.setModalShow(false);\r\n            }}>Yes</button>\r\n            <button className=\"no\" onClick={()=> {\r\n                props.setModalShow(false);\r\n            }}>No</button>\r\n            </div>\r\n            </div>\r\n        </div>,\r\n        document.getElementById('modal-root')\r\n      );\r\n    }\r\n    return false;\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nfunction Pagination(props) {\r\n  \r\n  const itemsPerPage = 3;\r\n\r\n  const pageNumberLimit = 4;\r\n\r\n  //max range of shown pagination\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4);\r\n\r\n  //min range of shown pagination\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n  \r\n  const pages = [];\r\n\r\n  //pagination range\r\n  for (let i = 1; i <= Math.ceil(props.data.length / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  //render pagination numbers\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={()=>{\r\n            props.setCurrentPage(number-1);\r\n          }}\r\n          className={props.currentPage === number-1 ? \"numberedli active\" : \"numberedli\"}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  //handling range of pagination on change of current page number\r\n  useEffect(()=>{\r\n    if ((props.currentPage + 1)  > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n    if ((props.currentPage + 1)  <= minPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n    if ((props.currentPage)  < 1) {\r\n      setmaxPageNumberLimit(4);\r\n      setminPageNumberLimit(0);\r\n    }\r\n    \r\n  },[props.currentPage]);\r\n  \r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li className=\"edgebtns\" onClick={()=>{\r\n      props.setCurrentPage(minPageNumberLimit-1);\r\n    }}> &hellip; </li>;\r\n  }\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li className=\"edgebtns\" onClick={()=>{\r\n      props.setCurrentPage(maxPageNumberLimit);\r\n    }}> &hellip; </li>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <ul >\r\n        <li \r\n            className={props.currentPage === 0 ? \"edgebtns disabled\" : \"edgebtns\"}\r\n            onClick={()=> props.setCurrentPage(props.currentPage - 1)}\r\n          >\r\n            <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n\r\n        <li\r\n            className={props.currentPage === pages.length - 1 ? \"edgebtns disabled\" : \"edgebtns\"}\r\n            onClick={()=> props.setCurrentPage(props.currentPage + 1)}\r\n          >\r\n            <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\r\n        </li>\r\n      </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;","function List(props) {\r\n    const { friendList, currentPage, favItem, setDeleteHolder, setModalShow} = props;\r\n  return (\r\n    <ul className=\"friend-list-ul\">\r\n              {\r\n                friendList.slice(currentPage*3, (currentPage+1)*3).map((item)=>{\r\n                  // displayed friendlist\r\n                  return (\r\n                    <li>\r\n                      <span>\r\n                        <span>{item.name}</span>\r\n                        <span>is your friend</span>\r\n                        </span>\r\n                    <span>\r\n                      {/* favourite a friend icon */}\r\n                      <i className={\"fa fa-star\" + (!item.favourite ? \"-o\" : '')} aria-hidden=\"true\" \r\n                      onClick={()=> favItem(item)}/>\r\n                      </span>\r\n                    <span>\r\n                      {/* delete a friend icon */}\r\n                    <i class=\"fa fa-trash-o\" aria-hidden=\"true\" \r\n                    onClick={()=>{\r\n                      setDeleteHolder(item.name);\r\n                      setModalShow(true);\r\n                    }}/>\r\n                    </span>\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n              </ul>\r\n  );\r\n}\r\n\r\nexport default List;","import './App.scss';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Modal from './Modal';\r\nimport { addFunction, deleteFunction, favFunction } from './helperfunctions';\r\nimport friends from './friends';\r\nimport Pagination from './Pagination';\r\nimport List from './List';\r\n\r\nexport default function App() {\r\n\r\n  //friend list stored possible to act as a server fetched data\r\n  const [friendListOg, setFriendListOg] = useState(friends);\r\n\r\n  //friend list\r\n  const [friendList, setFriendList] = useState([]);\r\n\r\n  //current page of pagination\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  //sort direction\r\n  const [sort, setSort] = useState(false);\r\n\r\n  //add friend message show condition\r\n  const [addSuccess, setAddSuccess] = useState(false);\r\n\r\n  //state to store validation error while adding friend\r\n  const [friendError, setFriendError] = useState('');\r\n\r\n  //delete modal display state\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  //temporary holder to store the name of friend to be deleted\r\n  const [deleteHolder, setDeleteHolder] = useState('');\r\n\r\n  //any change in orignal friendlist will be reflected on the current displayed friendlist\r\n  useEffect(()=>{\r\n    setFriendList(friendListOg);\r\n  },[friendListOg]);\r\n\r\n  //success message hide after 1 sec of being displayed\r\n  useEffect(()=>{\r\n    if(addSuccess) {\r\n      setTimeout(()=> {\r\n        setAddSuccess(false)\r\n      },1000);\r\n    }\r\n  },[addSuccess]);\r\n\r\n  //add friend function\r\n  const addItem = (name) => {\r\n    setFriendListOg(addFunction(name, friendListOg));\r\n  }\r\n\r\n  //delete friend function\r\n  const deleteItem = (name) => {\r\n    setFriendListOg(deleteFunction(name, friendListOg));\r\n    if(Math.ceil((friendListOg.length-1)/3) < currentPage + 1) {\r\n      setCurrentPage(current => current - 1);\r\n    }\r\n  }\r\n\r\n  //favourite a  friend function\r\n  const favItem = (item) => {\r\n    setFriendListOg(favFunction(item, friendListOg));\r\n  }\r\n\r\n  return (\r\n    <div className=\"friend-list-main\">\r\n          <div className=\"friend-list-box\">\r\n            <h3>You have {friendListOg.length} friends!</h3>\r\n            <div className=\"friend-list-box-inner\">\r\n              {/* add a friend input */}\r\n            <input id=\"addfriend\" placeholder=\"Enter your friend's name\"\r\n            onChange={(e)=> {\r\n              setAddSuccess(false);\r\n            }}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \"Enter\") {\r\n                if(e.target.value) {\r\n                if(friendListOg.map(item => item.name.toUpperCase()).includes(e.target.value.toUpperCase())) {\r\n                  setFriendError('Friend is already present in the list');\r\n                }\r\n                else {\r\n                addItem(e.target.value);\r\n                setTimeout(()=>{\r\n                  e.target.value = '';\r\n                }, 10)\r\n                setFriendError('');\r\n                setAddSuccess(true);\r\n                }\r\n              }\r\n              else {\r\n                setFriendError('Please enter name');\r\n              }\r\n              }\r\n            }}\r\n            />\r\n            {friendError && <p className=\"error\">{friendError}</p>}\r\n            {addSuccess && <p className=\"successalert\">Added Successfully!</p>}\r\n\r\n            {/* search a friend input */}\r\n            <input id=\"searchbox\" placeholder=\"Search Friends...\" onChange={(e)=>{\r\n              let inputVal = e.target.value;\r\n              setFriendList(friendListOg.filter(item  => item.name.toUpperCase().indexOf(inputVal.toUpperCase()) > -1));\r\n              setCurrentPage(0);\r\n              setSort(false);\r\n            }}/>\r\n            <div className=\"sortbtn\">\r\n            <button className={sort ? \"active\" : null} onClick={()=> {\r\n              if(sort) {\r\n              setFriendList(list=> list.sort((a,b)=> a.favourite - b.favourite));\r\n              }\r\n              else {\r\n                setFriendList(list=> list.sort((a,b)=> b.favourite - a.favourite));\r\n              }\r\n              setCurrentPage(0);\r\n              setSort(sorted => !sorted);\r\n            }}>Sort by Favourite</button>\r\n            </div>\r\n            {/* Rendered Friend List */}\r\n            <List friendList={friendList} currentPage={currentPage} favItem={favItem} setDeleteHolder={setDeleteHolder} setModalShow={setModalShow}/>\r\n            </div>\r\n            {/* Pagination component with edge case */}\r\n            {\r\n              friendList.length > 3 &&\r\n            <Pagination data={friendList} currentPage={currentPage} setCurrentPage={setCurrentPage}/>\r\n            }\r\n            </div>\r\n            <Modal show={modalShow} setModalShow={setModalShow} delete={deleteItem} friendList={friendListOg} name={deleteHolder}/>\r\n    </div>\r\n  );\r\n}\r\n","export const addFunction = (name, list) => {\r\n    let tempList = [...list, {name: name, favourite: false}];\r\n    return tempList;\r\n}\r\n\r\nexport const deleteFunction = (name, list) => {\r\n    let tempList = [...list].filter(listItem=> listItem.name !== name);\r\n    return tempList;\r\n}\r\n\r\nexport const favFunction = (item, list) => {\r\n    let tempList = list.map(listItem => listItem.name === item.name ? {...listItem, favourite: !item.favourite} : listItem);\r\n    return tempList;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}